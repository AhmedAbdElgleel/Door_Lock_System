/*
 ================================================================================================================================
 * File Name   : dc_motor.c
 *
 * Module Name : Dc Motor
 *
 * Description : Source File For Dc Motor
 *
 * Created On  : Oct 13, 2023
 *
 * Author Name : Ahmed Abd Elgleel
 ================================================================================================================================
 */
#include "dc_motor.h"
#include "gpio_interface.h"
#include "pwm_timer0.h"

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/

/* Description:
 * The Function to initialize the motors pin and setup the direction for the two motor
 * via using GPIO driver.
 */
void DcMOTOR_init(void)
{
#if defined (USE_FIRST_DC_MOTOR_WITH_CONTROL_SPEED)||defined(USE_FIRST_DC_MOTOR_WITHOUT_CONTROL_SPEED)
	/*define FIRST_DC_MOTOR_IN1_PIN_ID and FIRST_DC_MOTOR_IN2_PIN_ID as output pins */
	GPIO_setupPinDirection(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN1_PIN_ID, PIN_OUTPUT);
	GPIO_setupPinDirection(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN2_PIN_ID, PIN_OUTPUT);
	/*Initially Stop the First Motor */
	GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN1_PIN_ID, LOGIC_LOW);
	GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN2_PIN_ID, LOGIC_LOW);
#ifdef USE_FIRST_DC_MOTOR_WITH_CONTROL_SPEED
	/*define Enable pin of first motor as output pin*/
	GPIO_setupPinDirection(DC_MOTOR_ENABLE_PORT_ID, FIRST_DC_MOTOR_ENABLE_PIN_ID, PIN_OUTPUT);
#endif
#endif

#if defined(USE_SECOND_DC_MOTOR_WITH_CONTROL_SPEED)||defined(USE_SECOND_DC_MOTOR_WITHOUT_CONTROL_SPEED)
	/*define SECOND_DC_MOTOR_IN3_PIN_ID and SECOND_DC_MOTOR_IN4_PIN_ID as output pins */
	GPIO_setupPinDirection(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN3_PIN_ID, PIN_OUTPUT);
	GPIO_setupPinDirection(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN4_PIN_ID, PIN_OUTPUT);
	/*Initially Stop the Second Motor */
	GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN3_PIN_ID, LOGIC_LOW);
	GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN4_PIN_ID, LOGIC_LOW);
#ifdef USE_SECOND_DC_MOTOR_WITH_CONTROL_SPEED
	/*define Enable pin of second motor as output pin*/
	GPIO_setupPinDirection(DC_MOTOR_ENABLE_PORT_ID, SECOND_DC_MOTOR_ENABLE_PIN_ID, PIN_OUTPUT);
#endif
#endif
}

/* Description:
 * The function that rotate the DC Motor clock wise ,anti-clockwise or stop the motor
 * In this Function we can control the speed via using PWM
 */
#if defined(USE_FIRST_DC_MOTOR_WITH_CONTROL_SPEED) ||defined( USE_SECOND_DC_MOTOR_WITH_CONTROL_SPEED)
void DCMOTOR_rotateWithControl(uint8 a_state,uint8 a_speed,uint8 a_motorNum )
{
	if(a_motorNum==FIRST_DC_MOTOR)
		{
			if(STOP_ROTATION==a_state)
			{
				GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN1_PIN_ID, LOGIC_LOW);
				GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN2_PIN_ID, LOGIC_LOW);
			}
			else if(ROTATE_CLOCKWISE==a_state)
			{
				GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN1_PIN_ID, LOGIC_LOW);
				GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN2_PIN_ID, LOGIC_HIGH);
			}
			else if(ROTATE_ANTI_CLOCKWISE==a_state)
			{
				GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN1_PIN_ID, LOGIC_HIGH);
				GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN2_PIN_ID, LOGIC_LOW);
			}
			else
			{
				/*Do Nothing*/
			}
			PWM_setDutyCycle(PWM0, a_speed);
		}
		else if(a_motorNum==SECOND_DC_MOTOR)
		{
			if(STOP_ROTATION==a_state)
			{
				GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN3_PIN_ID, LOGIC_LOW);
				GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN4_PIN_ID, LOGIC_LOW);
			}
			else if(ROTATE_CLOCKWISE==a_state)
			{
				GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN3_PIN_ID, LOGIC_LOW);
				GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN4_PIN_ID, LOGIC_HIGH);
			}
			else if(ROTATE_ANTI_CLOCKWISE==a_state)
			{
				GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN3_PIN_ID, LOGIC_HIGH);
				GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN4_PIN_ID, LOGIC_LOW);
			}
			else
			{
				/*Do Nothing*/
			}
			/*PWM_Timer0_Start( (speed*1.0 / 100) * 255);*/
			/*or implement any other PWM if u use First timer with it*/
		}

}
#endif

/* Description:
 * The function that rotate the DC Motor clock wise ,anti-clockwise or stop the motor
 * In this Function we cannot control the speed where
 * in case clockwise and anti-clockwise the motor will rotate with max speed
 */
#if defined(USE_FIRST_DC_MOTOR_WITHOUT_CONTROL_SPEED) || defined( USE_SECOND_DC_MOTOR_WITHOUT_CONTROL_SPEED)
void DCMOTOR_rotateWithoutControl(uint8 a_state,uint8 a_motorNum)
{
	if(a_motorNum==FIRST_DC_MOTOR)
	{
		if(STOP_ROTATION==a_state)
		{
			GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN1_PIN_ID, LOGIC_LOW);
			GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN2_PIN_ID, LOGIC_LOW);
		}
		else if(ROTATE_CLOCKWISE==a_state)
		{
			GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN1_PIN_ID, LOGIC_LOW);
			GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN2_PIN_ID, LOGIC_HIGH);
		}
		else if(ROTATE_ANTI_CLOCKWISE==a_state)
		{
			GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN1_PIN_ID, LOGIC_HIGH);
			GPIO_writePin(DC_MOTOR_PORT_ID, FIRST_DC_MOTOR_IN2_PIN_ID, LOGIC_LOW);
		}
		else
		{
			/*Do Nothing*/
		}
	}
	else if(a_motorNum==SECOND_DC_MOTOR)
	{
		if(STOP_ROTATION==a_state)
		{
			GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN3_PIN_ID, LOGIC_LOW);
			GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN4_PIN_ID, LOGIC_LOW);
		}
		else if(ROTATE_CLOCKWISE==a_state)
		{
			GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN3_PIN_ID, LOGIC_LOW);
			GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN4_PIN_ID, LOGIC_HIGH);
		}
		else if(ROTATE_ANTI_CLOCKWISE==a_state)
		{
			GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN3_PIN_ID, LOGIC_HIGH);
			GPIO_writePin(DC_MOTOR_PORT_ID, SECOND_DC_MOTOR_IN4_PIN_ID, LOGIC_LOW);
		}
		else
		{
			/*Do Nothing*/
		}

	}

}
#endif
